CREATE DATABASE CAR_RENTAL;
USE CAR_RENTAL;

CREATE TABLE CAR_RENTAL.ROLE (
	ID INT PRIMARY KEY,
	ROLE VARCHAR(100) NOT NULL
);

CREATE TABLE CAR_RENTAL.USER (
	ID INT PRIMARY KEY,
	ROLE_ID INT NOT NULL,
	CONSTRAINT FK_USER_ROLE FOREIGN KEY (ROLE_ID) REFERENCES CAR_RENTAL.ROLE(ID)
);

CREATE TABLE CAR_RENTAL.USER_DATA (
	ID INT PRIMARY KEY,
	LOGIN VARCHAR(30) NOT NULL,
	PASSWORD VARCHAR(100) NOT NULL,
	USER_ID INT NOT NULL,
	CONSTRAINT UN_USER_DATA_LOGIN UNIQUE (LOGIN),
	CONSTRAINT FK_USER_DATA_USER FOREIGN KEY (USER_ID) REFERENCES CAR_RENTAL.USER(ID)
);

CREATE TABLE CAR_RENTAL.CAR (
	ID INT PRIMARY KEY,
	BRAND_NAME VARCHAR(100) NOT NULL,
	CAR_MODEL VARCHAR(100) NOT NULL,
	BODY_TYPE VARCHAR(30) NOT NULL,
	FLUEL_TYPE VARCHAR(30) NOT NULL,
	ENGINE_VOLUME FLOAT(10) NOT NULL,
	TRANSMISSION VARCHAR(30) NOT NULL,
	BODY_COLOR VARCHAR(100) NOT NULL,
	INTERIOR_COLOR VARCHAR(100) NOT NULL,
	IS_BROKEN CHAR(1) NOT NULL DEFAULT 'N',
	CONSTRAINT CHECK_CAR_IS_BRONER CHECK (IS_BROKEN IN ('Y', 'N'))
);

CREATE TABLE CAR_RENTAL.STATUS (
	ID INT PRIMARY KEY,
	STATUS VARCHAR(4) NOT NULL DEFAULT 'BRON',
	DISCOUNT DOUBLE NOT NULL DEFAULT 0,
	CONSTRAINT CHECK_STATUS_DISCOUNT CHECK (DISCOUNT BETWEEN 0.0 AND 100.0),
	CONSTRAINT CHECK_STATUS_STATUS CHECK (STATUS IN ('GOLD', 'BRIL', 'SILV', 'BRON'))
);

CREATE TABLE CAR_RENTAL.CLIENT_DATA (
	ID INT PRIMARY KEY,
	FIRST_NAME VARCHAR(30) NOT NULL,
	LAST_NAME VARCHAR(30) NOT NULL,
	PASSPORT_DATA VARCHAR(30) NOT NULL,
	TOTAL_RENTAL_TIME INT NOT NULL,
	STATUS_ID INT NOT NULL,
	CONSTRAINT FK_CLIENT_DATA_STATUS FOREIGN KEY (STATUS_ID) REFERENCES CAR_RENTAL.STATUS(ID)
);

CREATE TABLE CAR_RENTAL.ORDER (
	ID INT PRIMARY KEY,
	DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	USER_ID INT NOT NULL,
	CLIENT_ID INT NOT NULL,	
	DATE_FROM TIMESTAMP NOT NULL,
	DATE_TO TIMESTAMP NOT NULL,
	PRICE_WITH_DISCOUNT INT NOT NULL,
	DISCOUNT DOUBLE NOT NULL DEFAULT 0,
	DECLINE_REASON VARCHAR(300),
	ORDER_STATUS VARCHAR(4) NOT NULL DEFAULT 'W/P' COMMENT 'Order statuses: W/P - waiting for payment, PAID - paid, CONF - confirmed, PROC - processing, COMP - completed, DECL - declined',
	CONSTRAINT CHECK_ORDER_ORDER_STATUS CHECK (ORDER_STATUS IN ('W/P', 'PAID', 'CONF', 'PROC', 'COMP', 'DECL')),
	CONSTRAINT CHECK_ORDER_DISCOUNT CHECK (DISCOUNT BETWEEN 0.0 AND 100.0),
	CONSTRAINT FK_ORDER_USER FOREIGN KEY (USER_ID) REFERENCES CAR_RENTAL.USER(ID),
	CONSTRAINT FK_ORDER_CLIENT_DATA FOREIGN KEY (CLIENT_ID) REFERENCES CAR_RENTAL.CLIENT_DATA(ID)
);

CREATE TABLE CAR_RENTAL.REPAR_INVOICE (
	ID INT PRIMARY KEY,
	DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	CLIENT_ID INT NOT NULL,
	CAR_ID INT NOT NULL,
	DAMAGE_INFO VARCHAR(300) NOT NULL,
	COST INT NOT NULL,
	ADMIN_ID INT NOT NULL,
	ADD_INFO VARCHAR(300),
	IS_PAID VARCHAR(1) NOT NULL DEFAULT 'N',
	CONSTRAINT CHECK_REPAIR_INVOICE_IS_PAID CHECK (IS_PAID IN ('Y', 'N')),
	CONSTRAINT FK_REPAIR_INVOICE_CAR FOREIGN KEY (CAR_ID) REFERENCES CAR_RENTAL.CAR(ID),
	CONSTRAINT FK_REPAIR_INVOICE_USER_CL FOREIGN KEY (CLIENT_ID) REFERENCES CAR_RENTAL.USER(ID),
	CONSTRAINT FK_REPAIR_INVOICE_USER_ADM FOREIGN KEY (ADMIN_ID) REFERENCES CAR_RENTAL.USER(ID)
);
